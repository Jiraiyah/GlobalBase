buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
		mavenLocal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath group: 'org.ajoberstar', name: 'gradle-git', version: '0.10.1', changing: true
		classpath group: 'nl.javadude.gradle.plugins', name: 'license-gradle-plugin', version: '0.11.0', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

//********************************************************************************************************************************
//************************************************************* VERSIONING *******************************************************
//********************************************************************************************************************************

def doCmd(s) {
    try {
        s.execute(null, file('.')).text.trim()
    } catch(e) {
        'unspecified'
    }
}

version = "${minecraft_version}"
ext.gitRevision = doCmd('git rev-list --count HEAD')
ext.gitHash = doCmd('git rev-parse --short HEAD')
version += "-$gitRevision"

//********************************************************************************************************************************
//*********************************************************** License ************************************************************
//********************************************************************************************************************************
apply plugin: 'license'

license {
            ext.name = project.name
            ext.organization = project.organization
            ext.url = project.url
            ext.year = project.inceptionYear
            exclude '**/*.info'
            exclude '**/*.json'
            exclude '**/*.ma'
            exclude '**/*.mb'
            exclude '**/*.png'
            exclude '**/*.obj'
            exclude '**/*.lang'
            exclude '**/*.cfg'
            header new File(projectDir, 'HEADER.txt')
            sourceSets = project.sourceSets
            ignoreFailures = false
            strictCheck = true
            mapping { javascript='JAVADOC_STYLE'}
        }

//********************************************************************************************************************************
//************************************************************ MINECRAFT *********************************************************
//********************************************************************************************************************************
version = "${mod_version}"
group = "${group}"
archivesBaseName = "${name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20190719-1.14.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                gb {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                gb {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'globalbase', '--all', '--output', file('src/generated/resources/')

            mods {
                gb {
                    source sourceSets.main
                }
            }
        }
    }
}

//********************************************************************************************************************************
//*********************************************************** DEPENDENCIES *******************************************************
//********************************************************************************************************************************

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.0.11'
	compile fileTree(dir: 'libs', include: '*.jar')
}


jar {
    manifest {
        attributes([
            "Specification-Title": "${name}",
            "Specification-Vendor": "gbsareus",
            "Specification-Version": "${mod_version}", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gbsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}